<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2009-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard st, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;
<emphasis role="strong">#include</emphasis> &lt;stdio.h&gt;
<emphasis role="strong">#include</emphasis> &lt;stdlib.h&gt;

int <emphasis role="strong">main</emphasis>() {
  
  <emphasis role="strong">const</emphasis> char *files[] = { "fullmatrix1.dl", "fullmatrix2.dl", 
			  "fullmatrix3.dl", "fullmatrix4.dl",
			  "edgelist1.dl", "edgelist2.dl", "edgelist3.dl",
			  "edgelist4.dl", "edgelist5.dl", "edgelist6.dl",
			  "nodelist1.dl", "nodelist2.dl" };
  int no_files=<emphasis role="strong">sizeof</emphasis>(files)/<emphasis role="strong">sizeof</emphasis>(<emphasis role="strong">const</emphasis> char*);
  int i, ret;
  igraph_t g;
  FILE *infile;

  <emphasis role="strong">for</emphasis> (i=0; i&lt;no_files; i++) {
    <emphasis role="strong">printf</emphasis>("Doing %s\n", files[i]);
    infile=<emphasis role="strong">fopen</emphasis>(files[i], "r");
    <emphasis role="strong">if</emphasis> (!infile) {
      <emphasis role="strong">printf</emphasis>("Cannot open file: %s\n", files[i]);
      <emphasis role="strong">exit</emphasis>(1+i);
    }
    <emphasis role="strong"><link linkend='igraph_read_graph_dl'>igraph_read_graph_dl</link></emphasis>(&amp;g, infile, <emphasis>/*directed=*/</emphasis> 1);
    ret=<emphasis role="strong">fclose</emphasis>(infile);
    <emphasis role="strong">if</emphasis> (ret) {
      <emphasis role="strong">printf</emphasis>("Cannot close file: %s\n", files[i]);
      <emphasis role="strong">exit</emphasis>(11+i);
    }
    <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g, stdout);
    <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  }

  <emphasis role="strong">if</emphasis> (<emphasis role="strong">IGRAPH_FINALLY_STACK_SIZE</emphasis>() != 0)
    <emphasis role="strong">return</emphasis> 1;

  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
