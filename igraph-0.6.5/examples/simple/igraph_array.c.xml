<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge, MA 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;
<emphasis role="strong">#include</emphasis> &lt;stdio.h&gt;

void <emphasis role="strong">print_vector</emphasis>(<emphasis role="strong">const</emphasis> <link linkend='igraph_vector_t'>igraph_vector_t</link> *v, FILE *f) {
  long int i;
  <emphasis role="strong">for</emphasis> (i=0; i&lt;<emphasis role="strong"><link linkend='igraph_vector_size'>igraph_vector_size</link></emphasis>(v); i++) {
    <emphasis role="strong">fprintf</emphasis>(f, " %li", (long int) <emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(*v)[i]);
  }
  <emphasis role="strong">fprintf</emphasis>(f, "\n");
}

void <emphasis role="strong">print_array</emphasis>(<emphasis role="strong">const</emphasis> igraph_array3_t *a, FILE *f) {
  long int i,j,k;
  <emphasis role="strong">for</emphasis> (k=0; k&lt;<emphasis role="strong">igraph_array3_n</emphasis>(a, 3); k++) {
    <emphasis role="strong">for</emphasis> (i=0; i&lt;<emphasis role="strong">igraph_array3_n</emphasis>(a, 1); i++) {
      <emphasis role="strong">for</emphasis> (j=0; j&lt;<emphasis role="strong">igraph_array3_n</emphasis>(a, 2); j++) {
	<emphasis role="strong">fprintf</emphasis>(f, " %li", (long int) <emphasis role="strong">ARRAY3</emphasis>(*a, i, j, k));
      }
      <emphasis role="strong">fprintf</emphasis>(f, "\n");
    }
    <emphasis role="strong">fprintf</emphasis>(f, "\n");
  }
}

int <emphasis role="strong">main</emphasis>() {
  igraph_array3_t a;
  long int i,j,k;
  long int s=1;
  
  <emphasis role="strong">igraph_array3_init</emphasis>(&amp;a, 5,4,3);
  <emphasis role="strong">igraph_array3_destroy</emphasis>(&amp;a);

  <emphasis role="strong">igraph_array3_init</emphasis>(&amp;a, 5,4,3);
  <emphasis role="strong">print_array</emphasis>(&amp;a, stdout);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong">igraph_array3_n</emphasis>(&amp;a, 1) != 5) { 
    <emphasis role="strong">return</emphasis> 1;
  } 
  <emphasis role="strong">if</emphasis> (<emphasis role="strong">igraph_array3_n</emphasis>(&amp;a, 2) != 4) { 
    <emphasis role="strong">return</emphasis> 1;
  } 
  <emphasis role="strong">if</emphasis> (<emphasis role="strong">igraph_array3_n</emphasis>(&amp;a, 3) != 3) { 
    <emphasis role="strong">return</emphasis> 1;
  } 
  <emphasis role="strong">igraph_array3_destroy</emphasis>(&amp;a);

  <emphasis role="strong">igraph_array3_init</emphasis>(&amp;a,5,4,3);
  <emphasis role="strong">for</emphasis> (k=0; k&lt;<emphasis role="strong">igraph_array3_n</emphasis>(&amp;a,3); k++) {
    <emphasis role="strong">for</emphasis> (j=0; j&lt;<emphasis role="strong">igraph_array3_n</emphasis>(&amp;a,2); j++) {
      <emphasis role="strong">for</emphasis> (i=0; i&lt;<emphasis role="strong">igraph_array3_n</emphasis>(&amp;a,1); i++) {
	<emphasis role="strong">ARRAY3</emphasis>(a,i,j,k) = s++;
      }
    }
  }
  <emphasis role="strong">print_array</emphasis>(&amp;a,stdout);
  <emphasis role="strong">print_vector</emphasis>(&amp;a.data, stdout);
  <emphasis role="strong">igraph_array3_destroy</emphasis>(&amp;a);
  
  <emphasis role="strong">if</emphasis> (!IGRAPH_FINALLY_STACK_EMPTY) <emphasis role="strong">return</emphasis> 2;

  <emphasis role="strong">return</emphasis> 0;
}

</programlisting>
