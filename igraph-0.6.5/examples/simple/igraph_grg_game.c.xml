<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard st, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

<emphasis role="strong">#include</emphasis> &lt;unistd.h&gt;
<emphasis role="strong">#include</emphasis> &lt;sys/times.h&gt;
<emphasis role="strong">#include</emphasis> &lt;math.h&gt;

int <emphasis role="strong">main</emphasis>() {
  
  igraph_t g;
  long int i;
  <emphasis role="strong">struct</emphasis> tms time;
  clock_t current_time,start_time;
  int tps;
  long int runs=100, n=10000;
  igraph_real_t r=0.01;
  
  <emphasis>/* Empty graph */</emphasis>
  <emphasis role="strong"><link linkend='igraph_grg_game'>igraph_grg_game</link></emphasis>(&amp;g, 100, 0, 0, 0, 0);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_ecount'>igraph_ecount</link></emphasis>(&amp;g) != 0) {
    <emphasis role="strong">return</emphasis> 1;
  }
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  
  <emphasis>/* Full graph */</emphasis>
  <emphasis role="strong"><link linkend='igraph_grg_game'>igraph_grg_game</link></emphasis>(&amp;g, 10, <emphasis role="strong">sqrt</emphasis>(2.0)/2, 1, 0, 0);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_ecount'>igraph_ecount</link></emphasis>(&amp;g) != <emphasis role="strong"><link linkend='igraph_vcount'>igraph_vcount</link></emphasis>(&amp;g) * (<emphasis role="strong"><link linkend='igraph_vcount'>igraph_vcount</link></emphasis>(&amp;g)-1)/2) {
    <emphasis role="strong">return</emphasis> 2;
  }
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* Measure running time */</emphasis>
<emphasis>/*   tps=sysconf(_SC_CLK_TCK); // clock ticks per second  */</emphasis>
<emphasis>/*   times(&amp;time); start_time=time.tms_utime; */</emphasis>
<emphasis>/*   for (i=0; i&lt;runs; i++) { */</emphasis>
<emphasis>/*     igraph_grg_game2(&amp;g, n, r, 1);  */</emphasis>
<emphasis>/*     igraph_destroy(&amp;g); */</emphasis>
<emphasis>/*   } */</emphasis>
<emphasis>/*   times(&amp;time); current_time=time.tms_utime; */</emphasis>
<emphasis>/*   fprintf(stdout,"    sorted: time=%.3fs\n",(current_time-start_time)/(double)tps); */</emphasis>

<emphasis>/*   tps=sysconf(_SC_CLK_TCK); // clock ticks per second  */</emphasis>
<emphasis>/*   times(&amp;time); start_time=time.tms_utime; */</emphasis>
<emphasis>/*   for (i=0; i&lt;runs; i++) { */</emphasis>
<emphasis>/*     igraph_grg_game(&amp;g, n, r, 1); */</emphasis>
<emphasis>/*     igraph_destroy(&amp;g); */</emphasis>
<emphasis>/*   } */</emphasis>
<emphasis>/*   times(&amp;time); current_time=time.tms_utime; */</emphasis>
<emphasis>/*   fprintf(stdout,"non-sorted: time=%.3fs\n", */</emphasis>
<emphasis>/* 	  (current_time-start_time)/(double)tps); */</emphasis>


  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
