<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge, MA 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

int <emphasis role="strong">main</emphasis>() {

  igraph_t g;
  int ret;

  <emphasis role="strong"><link linkend='igraph_atlas'>igraph_atlas</link></emphasis>(&amp;g, 45);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g, stdout);
  <emphasis role="strong">printf</emphasis>("\n");
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis role="strong"><link linkend='igraph_atlas'>igraph_atlas</link></emphasis>(&amp;g, 0);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g, stdout);
  <emphasis role="strong">printf</emphasis>("\n");
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis role="strong"><link linkend='igraph_atlas'>igraph_atlas</link></emphasis>(&amp;g, 1252);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g, stdout);
  <emphasis role="strong">printf</emphasis>("\n");
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis role="strong"><link linkend='igraph_set_error_handler'>igraph_set_error_handler</link></emphasis>(<link linkend='igraph_error_handler_ignore'>igraph_error_handler_ignore</link>);
  ret=<emphasis role="strong"><link linkend='igraph_atlas'>igraph_atlas</link></emphasis>(&amp;g, -1);
  <emphasis role="strong">if</emphasis> (ret != IGRAPH_EINVAL) {
    <emphasis role="strong">return</emphasis> 1;
  }

  ret=<emphasis role="strong"><link linkend='igraph_atlas'>igraph_atlas</link></emphasis>(&amp;g, 1253);
  <emphasis role="strong">if</emphasis> (ret != IGRAPH_EINVAL) {
    <emphasis role="strong">return</emphasis> 2;
  }

  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
