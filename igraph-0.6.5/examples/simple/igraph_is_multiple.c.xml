<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2007-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard st, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

void <emphasis role="strong">print_vector</emphasis>(igraph_vector_bool_t *v, FILE *f) {
  long int i;
  <emphasis role="strong">for</emphasis> (i=0; i&lt;<emphasis role="strong">igraph_vector_bool_size</emphasis>(v); i++) {
    <emphasis role="strong">fprintf</emphasis>(f, " %i", (int) <emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(*v)[i]);
  }
  <emphasis role="strong">fprintf</emphasis>(f, "\n");
}

int <emphasis role="strong">main</emphasis>() {
  
  igraph_t graph;
  igraph_vector_bool_t v;
  
  <emphasis role="strong">igraph_vector_bool_init</emphasis>(&amp;v, 0);

  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;graph, 0, IGRAPH_DIRECTED, 0,1, 1,2, 2,1, 0,1, 1,0, 3,4, 11,10, -1);
  <emphasis role="strong"><link linkend='igraph_is_multiple'>igraph_is_multiple</link></emphasis>(&amp;graph, &amp;v, <emphasis role="strong"><link linkend='igraph_ess_all'>igraph_ess_all</link></emphasis>(IGRAPH_EDGEORDER_ID));
  <emphasis role="strong">print_vector</emphasis>(&amp;v, stdout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;graph);
  
  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;graph, 0, IGRAPH_UNDIRECTED,
	       0,0, 1,2, 1,1, 2,2, 2,1, 2,3, 2,4, 
	       2,5, 2,6, 2,2, 3,2, 0,0, 6,2, 2,2, 0,0, -1);
  <emphasis role="strong"><link linkend='igraph_is_multiple'>igraph_is_multiple</link></emphasis>(&amp;graph, &amp;v, <emphasis role="strong"><link linkend='igraph_ess_all'>igraph_ess_all</link></emphasis>(IGRAPH_EDGEORDER_ID));
  <emphasis role="strong">print_vector</emphasis>(&amp;v, stdout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;graph);

  <emphasis role="strong">igraph_vector_bool_destroy</emphasis>(&amp;v);
  
  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
