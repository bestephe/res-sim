<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2010-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge, MA 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;
<emphasis role="strong">#include</emphasis> &lt;stdio.h&gt;

int <emphasis role="strong">main</emphasis>() {

  igraph_t g, domtree;
  <link linkend='igraph_vector_t'>igraph_vector_t</link> dom, leftout;

  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;dom, 0);
  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 13, IGRAPH_DIRECTED,
	       0,1, 0,7, 0,10,
	       1,2, 1,5,
	       2,3,
	       3,4,
	       4,3, 4,0,
	       5,3, 5,6,
	       6,3,
	       7,8, 7,10, 7,11,
	       8,9,
	       9,4, 9,8,
	       10,11,
	       11,12,
	       12,9,
	       -1);

  <emphasis>/* Check NULL vector arguments */</emphasis>
  <emphasis role="strong"><link linkend='igraph_dominator_tree'>igraph_dominator_tree</link></emphasis>(&amp;g, <emphasis>/*root=*/</emphasis> 0, <emphasis>/*dom=*/</emphasis> 0, <emphasis>/*domtree=*/</emphasis> 0,
			<emphasis>/*leftout=*/</emphasis> 0, <emphasis>/*mode=*/</emphasis> IGRAPH_OUT);

  <emphasis>/* Proper calculation */</emphasis>
  <emphasis role="strong"><link linkend='igraph_dominator_tree'>igraph_dominator_tree</link></emphasis>(&amp;g, <emphasis>/*root=*/</emphasis> 0, &amp;dom, <emphasis>/*domtree=*/</emphasis> 0,
			<emphasis>/*leftout=*/</emphasis> 0, <emphasis>/*mode=*/</emphasis> IGRAPH_OUT);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;dom);

  <emphasis>/* Tree calculation */</emphasis>
  <emphasis role="strong"><link linkend='igraph_dominator_tree'>igraph_dominator_tree</link></emphasis>(&amp;g, <emphasis>/*root=*/</emphasis> 0, <emphasis>/*dom=*/</emphasis> 0, <emphasis>/*domtree=*/</emphasis> &amp;domtree,
			<emphasis>/*leftout=*/</emphasis> 0, <emphasis>/*mode=*/</emphasis> IGRAPH_OUT);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;domtree, stdout);
  
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;dom);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;domtree);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* -------------------------------------------------------------------*/</emphasis>
  
  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;dom, 0);
  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 13, IGRAPH_DIRECTED,
	       1,0, 2,0, 3,0,
	       4,1,
	       1,2, 4,2, 5,2,
	       6,3, 7,3,
	       12,4,
	       8,5, 
	       9,6,
	       9,7, 10,7,
	       5,8, 11,8,
	       11,9,
	       9,10,
	       9,11, 0,11,
	       8,12,
	       -1);

  <emphasis>/* Check NULL vector arguments */</emphasis>
  <emphasis role="strong"><link linkend='igraph_dominator_tree'>igraph_dominator_tree</link></emphasis>(&amp;g, <emphasis>/*root=*/</emphasis> 0, <emphasis>/*dom=*/</emphasis> 0, <emphasis>/*domtree=*/</emphasis> 0,
			<emphasis>/*leftout=*/</emphasis> 0, <emphasis>/*mode=*/</emphasis> IGRAPH_IN);

  <emphasis>/* Proper calculation */</emphasis>
  <emphasis role="strong"><link linkend='igraph_dominator_tree'>igraph_dominator_tree</link></emphasis>(&amp;g, <emphasis>/*root=*/</emphasis> 0, &amp;dom, <emphasis>/*domtree=*/</emphasis> 0,
			<emphasis>/*leftout=*/</emphasis> 0, <emphasis>/*mode=*/</emphasis> IGRAPH_IN);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;dom);

  <emphasis>/* Tree calculation */</emphasis>
  <emphasis role="strong"><link linkend='igraph_dominator_tree'>igraph_dominator_tree</link></emphasis>(&amp;g, <emphasis>/*root=*/</emphasis> 0, <emphasis>/*dom=*/</emphasis> 0, <emphasis>/*domtree=*/</emphasis> &amp;domtree,
			<emphasis>/*leftout=*/</emphasis> 0, <emphasis>/*mode=*/</emphasis> IGRAPH_IN);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;domtree, stdout);
  
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;dom);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;domtree);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* -------------------------------------------------------------------*/</emphasis>

  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;dom, 0);
  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;leftout, 0);

  <emphasis>/* Check a graph with more components */</emphasis>
  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 20, IGRAPH_DIRECTED,
	       0,1, 0,2, 0,3,
	       1,4,
	       2,1, 2,4, 2,8,
	       3,9, 3,10,
	       4,15,
	       8,11, 
	       9,12,
	       10,12, 10,13,
	       11,8, 11,14,
	       12,14,
	       13,12,
	       14,12, 14,0,
	       15,11,
	       -1);

  <emphasis role="strong"><link linkend='igraph_dominator_tree'>igraph_dominator_tree</link></emphasis>(&amp;g, <emphasis>/*root=*/</emphasis> 0, &amp;dom, &amp;domtree,
			&amp;leftout, <emphasis>/*mode=*/</emphasis> IGRAPH_OUT);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;dom);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;leftout);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;domtree, stdout);

  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;dom);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;leftout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;domtree);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* -------------------------------------------------------------------*/</emphasis>

  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;dom, 0);
  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;leftout, 0);
  
  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 10, IGRAPH_DIRECTED, 
	       0,9,
	       1,0, 1,2,
	       2,3, 2,7,
	       3,1,
	       4,1, 4,3,
	       5,2, 5,3, 5,4, 5,8,
	       6,5, 6,9,
	       8,7,
	       -1);
  
  <emphasis role="strong"><link linkend='igraph_dominator_tree'>igraph_dominator_tree</link></emphasis>(&amp;g, <emphasis>/*root=*/</emphasis> 9, &amp;dom, &amp;domtree,
			&amp;leftout, <emphasis>/*mode=*/</emphasis> IGRAPH_IN);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;dom);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;leftout);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;domtree, stdout);
   
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;dom);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;leftout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;domtree);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
 
  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
