<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard st, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;
<emphasis role="strong">#include</emphasis> &lt;math.h&gt;
<emphasis role="strong">#include</emphasis> &lt;stdlib.h&gt;

int <emphasis role="strong">main</emphasis>() {
  igraph_t g, extd_g;
  igraph_matrix_t coords;
  <link linkend='igraph_vector_t'>igraph_vector_t</link> edgelist, extd_edgelist, extd_to_orig_eids;
  <link linkend='igraph_vector_t'>igraph_vector_t</link> layers;

  <emphasis role="strong"><link linkend='igraph_matrix_init'>igraph_matrix_init</link></emphasis>(&amp;coords, 0, 0);
  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;extd_to_orig_eids, 0);

  <emphasis>/* Layout on simple graph with predefined layers */</emphasis>
  <emphasis role="strong">igraph_vector_init_int_end</emphasis>(&amp;layers, -1, 0,1,1,2,3,3,4,4,5, -1);
  <emphasis role="strong">igraph_vector_init_int_end</emphasis>(&amp;edgelist, -1,
          0,1, 0,2, 0,3, 1,2, 2,2, 1,4, 2,5, 4,6, 5,7, 6,8, 7,8,
          3,8, 8,1, 8,2, -1);
  <emphasis role="strong"><link linkend='igraph_create'>igraph_create</link></emphasis>(&amp;g, &amp;edgelist, 0, 1);

  <emphasis role="strong"><link linkend='igraph_layout_sugiyama'>igraph_layout_sugiyama</link></emphasis>(&amp;g, &amp;coords, 0, 0, &amp;layers,
          <emphasis>/* hgap = */</emphasis> 1,
          <emphasis>/* vgap = */</emphasis> 1,
          <emphasis>/* maxiter = */</emphasis> 100,
          <emphasis>/* weights = */</emphasis> 0);
  <emphasis role="strong">igraph_matrix_print</emphasis>(&amp;coords);
  <emphasis role="strong">printf</emphasis>("===\n");

  <emphasis>/* Same, but this time also return the extended graph */</emphasis>
  <emphasis role="strong"><link linkend='igraph_layout_sugiyama'>igraph_layout_sugiyama</link></emphasis>(&amp;g, &amp;coords, &amp;extd_g, &amp;extd_to_orig_eids, &amp;layers,
          <emphasis>/* hgap = */</emphasis> 1,
          <emphasis>/* vgap = */</emphasis> 1,
          <emphasis>/* maxiter = */</emphasis> 100,
          <emphasis>/* weights = */</emphasis> 0);
  <emphasis role="strong">igraph_matrix_print</emphasis>(&amp;coords);
  <emphasis role="strong">printf</emphasis>("===\n");
  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;extd_edgelist, 0);
  <emphasis role="strong"><link linkend='igraph_get_edgelist'>igraph_get_edgelist</link></emphasis>(&amp;extd_g, &amp;extd_edgelist, 0);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;extd_edgelist);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;extd_edgelist);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;extd_g);
  <emphasis role="strong">printf</emphasis>("===\n");
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;extd_to_orig_eids);
  <emphasis role="strong">printf</emphasis>("===\n");

  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;layers);

  <emphasis>/* Same, but with automatic layering */</emphasis>
  <emphasis role="strong"><link linkend='igraph_layout_sugiyama'>igraph_layout_sugiyama</link></emphasis>(&amp;g, &amp;coords, 0, 0, 0,
          <emphasis>/* hgap = */</emphasis> 1,
          <emphasis>/* vgap = */</emphasis> 1,
          <emphasis>/* maxiter = */</emphasis> 100,
          <emphasis>/* weights = */</emphasis> 0);
  <emphasis role="strong">igraph_matrix_print</emphasis>(&amp;coords);
  <emphasis role="strong">printf</emphasis>("===\n");

  <emphasis>/* Layering with gaps in it */</emphasis>
  <emphasis role="strong">igraph_vector_init_int_end</emphasis>(&amp;layers, -1, 0,2,2,4,6,6,12,12,15, -1);
  <emphasis role="strong"><link linkend='igraph_layout_sugiyama'>igraph_layout_sugiyama</link></emphasis>(&amp;g, &amp;coords, 0, 0, &amp;layers,
          <emphasis>/* hgap = */</emphasis> 1,
          <emphasis>/* vgap = */</emphasis> 1,
          <emphasis>/* maxiter = */</emphasis> 100,
          <emphasis>/* weights = */</emphasis> 0);
  <emphasis role="strong">igraph_matrix_print</emphasis>(&amp;coords);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;layers);
  <emphasis role="strong">printf</emphasis>("===\n");

  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;edgelist);
  <emphasis role="strong"><link linkend='igraph_matrix_destroy'>igraph_matrix_destroy</link></emphasis>(&amp;coords);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;extd_to_orig_eids);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
