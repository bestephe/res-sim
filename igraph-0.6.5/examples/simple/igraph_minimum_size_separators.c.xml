<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2010-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard st, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

int <emphasis role="strong">print_and_destroy</emphasis>(igraph_vector_ptr_t *ptr) {
  long int i, n=<emphasis role="strong"><link linkend='igraph_vector_ptr_size'>igraph_vector_ptr_size</link></emphasis>(ptr);
  <emphasis role="strong">for</emphasis> (i=0; i&lt;n; i++) {
    <link linkend='igraph_vector_t'>igraph_vector_t</link> *v=<emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(*ptr)[i];
    <emphasis role="strong">igraph_vector_print</emphasis>(v);
    <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(v);
    <emphasis role="strong"><link linkend='igraph_free'>igraph_free</link></emphasis>(v);
  }
  <emphasis role="strong"><link linkend='igraph_vector_ptr_destroy'>igraph_vector_ptr_destroy</link></emphasis>(ptr);
  <emphasis role="strong">return</emphasis> 0;
}

int <emphasis role="strong">main</emphasis>() {
  igraph_t g, g2;
  igraph_vector_ptr_t sep;
  igraph_vs_t vs;
  
  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 7, IGRAPH_UNDIRECTED,
	       1,0, 2,0, 3,0, 4,0, 5,0, 6,0,
	       -1);
  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;sep, 0);
  <emphasis role="strong"><link linkend='igraph_minimum_size_separators'>igraph_minimum_size_separators</link></emphasis>(&amp;g, &amp;sep);
  <emphasis role="strong">print_and_destroy</emphasis>(&amp;sep);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* ----------------------------------------------------------- */</emphasis>

  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 5, IGRAPH_UNDIRECTED,
	       0,3, 1,3, 2,3,
	       0,4, 1,4, 2,4,
	       -1);
  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;sep, 0);
  <emphasis role="strong"><link linkend='igraph_minimum_size_separators'>igraph_minimum_size_separators</link></emphasis>(&amp;g, &amp;sep);
  <emphasis role="strong">print_and_destroy</emphasis>(&amp;sep);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* ----------------------------------------------------------- */</emphasis>

  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 5, IGRAPH_UNDIRECTED,
	       2,0, 3,0, 4,0,
	       2,1, 3,1, 4,1,
	       -1);
  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;sep, 0);
  <emphasis role="strong"><link linkend='igraph_minimum_size_separators'>igraph_minimum_size_separators</link></emphasis>(&amp;g, &amp;sep);
  <emphasis role="strong">print_and_destroy</emphasis>(&amp;sep);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* ----------------------------------------------------------- */</emphasis>

  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 10, IGRAPH_UNDIRECTED,
	       0,2, 0,3, 1,2, 1,3, 5,2, 5,3, 6,2, 6,3, 
	       7,2, 7,3, 8,2, 8,3, 9,2, 9,3,
	       2,4, 4,3,
	       -1);
  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;sep, 0);
  <emphasis role="strong"><link linkend='igraph_minimum_size_separators'>igraph_minimum_size_separators</link></emphasis>(&amp;g, &amp;sep);
  <emphasis role="strong">print_and_destroy</emphasis>(&amp;sep);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);  

  <emphasis>/* ----------------------------------------------------------- */</emphasis>

  <emphasis role="strong"><link linkend='igraph_full'>igraph_full</link></emphasis>(&amp;g, 4, IGRAPH_UNDIRECTED, <emphasis>/*loops=*/</emphasis> 0);
  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;sep, 0);
  <emphasis role="strong"><link linkend='igraph_minimum_size_separators'>igraph_minimum_size_separators</link></emphasis>(&amp;g, &amp;sep);
  <emphasis role="strong">print_and_destroy</emphasis>(&amp;sep);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);  

  <emphasis>/* ----------------------------------------------------------- */</emphasis>

  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 23, IGRAPH_UNDIRECTED,
	       0,1, 0,2, 0,3, 0,4, 0,5,
	       1,2, 1,3, 1,4, 1,6,
	       2,3, 2,5, 2,6,
	       3,4, 3,5, 3,6,
	       4,5, 4,6, 4,20,
	       5,6, 
	       6,7, 6,10, 6,13, 6,18,
	       7,8, 7,10, 7,13,
	       8,9,
	       9,11, 9,12,
	       10,11, 10,13,
	       11,15,
	       12,15,
	       13,14,
	       14,15,
	       16,17, 16,18, 16,19,
	       17,19, 17,20,
	       18,19, 18,21, 18,22,
	       19,20,
	       20,21, 20,22,
	       21,22,
	       -1);

  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;sep, 0);
  <emphasis role="strong"><link linkend='igraph_minimum_size_separators'>igraph_minimum_size_separators</link></emphasis>(&amp;g, &amp;sep);
  <emphasis role="strong">printf</emphasis>("Orig:\n"); <emphasis role="strong">print_and_destroy</emphasis>(&amp;sep);

  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;sep, 0);
  <emphasis role="strong"><link linkend='igraph_vs_vector_small'>igraph_vs_vector_small</link></emphasis>(&amp;vs, 0,1,2,3,4,5,6, 16,17,18,19,20,21,22, -1);
  <emphasis role="strong"><link linkend='igraph_induced_subgraph'>igraph_induced_subgraph</link></emphasis>(&amp;g, &amp;g2, vs, IGRAPH_SUBGRAPH_AUTO);
  <emphasis role="strong"><link linkend='igraph_minimum_size_separators'>igraph_minimum_size_separators</link></emphasis>(&amp;g2, &amp;sep);
  <emphasis role="strong">printf</emphasis>("1-7,17-23:\n"); <emphasis role="strong">print_and_destroy</emphasis>(&amp;sep);
  <emphasis role="strong"><link linkend='igraph_vs_destroy'>igraph_vs_destroy</link></emphasis>(&amp;vs);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);
  
  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;sep, 0);
  <emphasis role="strong"><link linkend='igraph_vs_vector_small'>igraph_vs_vector_small</link></emphasis>(&amp;vs, 6,7,8,9,10,11,12,13,14,15, -1);
  <emphasis role="strong"><link linkend='igraph_induced_subgraph'>igraph_induced_subgraph</link></emphasis>(&amp;g, &amp;g2, vs, IGRAPH_SUBGRAPH_AUTO);
  <emphasis role="strong"><link linkend='igraph_minimum_size_separators'>igraph_minimum_size_separators</link></emphasis>(&amp;g2, &amp;sep);
  <emphasis role="strong">printf</emphasis>("7-16:\n"); <emphasis role="strong">print_and_destroy</emphasis>(&amp;sep);
  <emphasis role="strong"><link linkend='igraph_vs_destroy'>igraph_vs_destroy</link></emphasis>(&amp;vs);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);
  
  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;sep, 0);
  <emphasis role="strong"><link linkend='igraph_vs_vector_small'>igraph_vs_vector_small</link></emphasis>(&amp;vs, 16,17,18,19,20,21,22, -1);
  <emphasis role="strong"><link linkend='igraph_induced_subgraph'>igraph_induced_subgraph</link></emphasis>(&amp;g, &amp;g2, vs, IGRAPH_SUBGRAPH_AUTO);
  <emphasis role="strong"><link linkend='igraph_minimum_size_separators'>igraph_minimum_size_separators</link></emphasis>(&amp;g2, &amp;sep);
  <emphasis role="strong">printf</emphasis>("17-23:\n"); <emphasis role="strong">print_and_destroy</emphasis>(&amp;sep);
  <emphasis role="strong"><link linkend='igraph_vs_destroy'>igraph_vs_destroy</link></emphasis>(&amp;vs);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);
  
  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;sep, 0);
  <emphasis role="strong"><link linkend='igraph_vs_vector_small'>igraph_vs_vector_small</link></emphasis>(&amp;vs, 6,7,10,13, -1);
  <emphasis role="strong"><link linkend='igraph_induced_subgraph'>igraph_induced_subgraph</link></emphasis>(&amp;g, &amp;g2, vs, IGRAPH_SUBGRAPH_AUTO);
  <emphasis role="strong"><link linkend='igraph_minimum_size_separators'>igraph_minimum_size_separators</link></emphasis>(&amp;g2, &amp;sep);
  <emphasis role="strong">printf</emphasis>("7,8,11,14:\n"); <emphasis role="strong">print_and_destroy</emphasis>(&amp;sep);
  <emphasis role="strong"><link linkend='igraph_vs_destroy'>igraph_vs_destroy</link></emphasis>(&amp;vs);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);

  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;sep, 0);
  <emphasis role="strong"><link linkend='igraph_vs_vector_small'>igraph_vs_vector_small</link></emphasis>(&amp;vs, 0,1,2,3,4,5,6, -1);
  <emphasis role="strong"><link linkend='igraph_induced_subgraph'>igraph_induced_subgraph</link></emphasis>(&amp;g, &amp;g2, vs, IGRAPH_SUBGRAPH_AUTO);
  <emphasis role="strong"><link linkend='igraph_minimum_size_separators'>igraph_minimum_size_separators</link></emphasis>(&amp;g2, &amp;sep);
  <emphasis role="strong">printf</emphasis>("1-7:\n"); <emphasis role="strong">print_and_destroy</emphasis>(&amp;sep);
  <emphasis role="strong"><link linkend='igraph_vs_destroy'>igraph_vs_destroy</link></emphasis>(&amp;vs);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);  

  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);  

  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
