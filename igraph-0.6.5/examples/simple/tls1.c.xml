<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2011-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;
<emphasis role="strong">#include</emphasis> &lt;pthread.h&gt;
<emphasis role="strong">#include</emphasis> &lt;unistd.h&gt;

void *<emphasis role="strong">thread_function</emphasis>(void *arg) {
  <emphasis role="strong"><link linkend='IGRAPH_FINALLY'>IGRAPH_FINALLY</link></emphasis>(0, 0);
}

int <emphasis role="strong">main</emphasis>() {
  pthread_t thread_id;
  void *exit_status;

  <emphasis>/* Skip if igraph is not thread-safe */</emphasis>
  <emphasis role="strong">if</emphasis> (!<link linkend='IGRAPH_THREAD_SAFE'>IGRAPH_THREAD_SAFE</link>) { 
    <emphasis role="strong">return</emphasis> 77;
  }
  
  <emphasis>/* Run a thread that leaves some junk in the error stack */</emphasis>
  <emphasis role="strong">pthread_create</emphasis>(&amp;thread_id, NULL, thread_function, 0);
  <emphasis role="strong">pthread_join</emphasis>(thread_id, &amp;exit_status);

  <emphasis>/* Check that the error stack is not common */</emphasis>
  <emphasis role="strong">if</emphasis> (!IGRAPH_FINALLY_STACK_EMPTY) {
    <emphasis role="strong">printf</emphasis>("Foobar\n");
    <emphasis role="strong">return</emphasis> 1;
  }

  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
