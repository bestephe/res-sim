<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard st, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;
<emphasis role="strong">#include</emphasis> &lt;math.h&gt;

int <emphasis role="strong">main</emphasis>() {
  
  igraph_t g;
  igraph_real_t res;

  <emphasis>/* Trivial cases */</emphasis>

  <emphasis role="strong"><link linkend='igraph_ring'>igraph_ring</link></emphasis>(&amp;g, 100, IGRAPH_UNDIRECTED, 0, 0);
  <emphasis role="strong"><link linkend='igraph_reciprocity'>igraph_reciprocity</link></emphasis>(&amp;g, &amp;res, 0, IGRAPH_RECIPROCITY_DEFAULT);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis role="strong">if</emphasis> (res != 1) {
    <emphasis role="strong">return</emphasis> 1;
  }

  <emphasis>/* Small test graph */</emphasis>

  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 0, IGRAPH_DIRECTED, 
	       0,  1,  0,  2,  0,  3,  1,  0,  2,  3,  3,  2, -1);
  
  <emphasis role="strong"><link linkend='igraph_reciprocity'>igraph_reciprocity</link></emphasis>(&amp;g, &amp;res, 0, IGRAPH_RECIPROCITY_RATIO);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis role="strong">if</emphasis> (res != 0.5) {
    <emphasis role="strong">fprintf</emphasis>(stderr, "%f != %f\n", res, 0.5);
    <emphasis role="strong">return</emphasis> 2;
  }

  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 0, IGRAPH_DIRECTED, 0,1,1,2,2,1, -1);
  <emphasis role="strong"><link linkend='igraph_reciprocity'>igraph_reciprocity</link></emphasis>(&amp;g, &amp;res, 0, IGRAPH_RECIPROCITY_DEFAULT);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  
  <emphasis role="strong">if</emphasis> (<emphasis role="strong">fabs</emphasis>(res - 2.0/3.0) &gt; 1e-15) {
    <emphasis role="strong">fprintf</emphasis>(stderr, "%f != %f\n", res, 2.0/3.0);
    <emphasis role="strong">return</emphasis> 3;
  }

  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
