<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2010-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge, MA 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

int <emphasis role="strong">doit</emphasis>(igraph_t *g) {

  igraph_vector_ptr_t blocks;
  <link linkend='igraph_vector_t'>igraph_vector_t</link> cohesion;
  <link linkend='igraph_vector_t'>igraph_vector_t</link> parent;
  igraph_t block_tree;
  long int i;

  <emphasis role="strong"><link linkend='igraph_vector_ptr_init'>igraph_vector_ptr_init</link></emphasis>(&amp;blocks, 0);
  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;cohesion, 0);
  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;parent, 0);

  <emphasis role="strong"><link linkend='igraph_cohesive_blocks'>igraph_cohesive_blocks</link></emphasis>(g, &amp;blocks, &amp;cohesion, &amp;parent, 
			 &amp;block_tree);
  
  <emphasis role="strong">printf</emphasis>("Blocks:\n");
  <emphasis role="strong">for</emphasis> (i=0; i&lt;<emphasis role="strong"><link linkend='igraph_vector_ptr_size'>igraph_vector_ptr_size</link></emphasis>(&amp;blocks); i++) {
    <link linkend='igraph_vector_t'>igraph_vector_t</link> *sg=<emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(blocks)[i];
    <emphasis role="strong">printf</emphasis>("  "); <emphasis role="strong">igraph_vector_print</emphasis>(sg);
    <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(sg);
    <emphasis role="strong"><link linkend='igraph_free'>igraph_free</link></emphasis>(sg);
  }
  <emphasis role="strong">printf</emphasis>("Cohesion:\n  ");  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;cohesion);
  <emphasis role="strong">printf</emphasis>("Parents:\n  ");   <emphasis role="strong">igraph_vector_print</emphasis>(&amp;parent);
  <emphasis role="strong">printf</emphasis>("Block graph:\n"); <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;block_tree, stdout);

  <emphasis role="strong"><link linkend='igraph_vector_ptr_destroy'>igraph_vector_ptr_destroy</link></emphasis>(&amp;blocks);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;cohesion);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;parent);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;block_tree);

  <emphasis role="strong">return</emphasis> 0;
}

int <emphasis role="strong">main</emphasis>() {
  
  igraph_t g;
  int ret;

  <emphasis>/* --------------------------------------------------------*/</emphasis>
  <emphasis>/* The graph from the Moody-White paper                    */</emphasis>

  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 23, IGRAPH_UNDIRECTED,
	       0,1, 0,2, 0,3, 0,4, 0,5,
	       1,2, 1,3, 1,4, 1,6,
	       2,3, 2,5, 2,6,
	       3,4, 3,5, 3,6,
	       4,5, 4,6, 4,20,
	       5,6, 
	       6,7, 6,10, 6,13, 6,18,
	       7,8, 7,10, 7,13,
	       8,9,
	       9,11, 9,12,
	       10,11, 10,13,
	       11,15,
	       12,15,
	       13,14,
	       14,15,
	       16,17, 16,18, 16,19,
	       17,19, 17,20,
	       18,19, 18,21, 18,22,
	       19,20,
	       20,21, 20,22,
	       21,22,
	       -1);
  
  <emphasis role="strong">if</emphasis> ( (ret=<emphasis role="strong">doit</emphasis>(&amp;g)) ) { <emphasis role="strong">return</emphasis> ret; }
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  <emphasis role="strong">printf</emphasis>("--\n");

  <emphasis>/* --------------------------------------------------------*/</emphasis>
  <emphasis>/* A tricky graph, where the separators themselves         */</emphasis>
  <emphasis>/* form a block. But recently we don't include this        */</emphasis>
  <emphasis>/* block in the results.                                   */</emphasis>

  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 8, IGRAPH_UNDIRECTED,
	       0,1,0,4,0,5, 1,2,1,4,1,5,1,6, 2,3,2,5,2,6,2,7,
	       3,6,3,7, 4,5, 5,6, 6,7, 
	       -1);
  
  <emphasis role="strong">if</emphasis> ( (ret=<emphasis role="strong">doit</emphasis>(&amp;g)) ) { <emphasis role="strong">return</emphasis> ret; }
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  <emphasis role="strong">printf</emphasis>("--\n");  

  <emphasis>/* --------------------------------------------------------*/</emphasis>
  <emphasis>/* The science camp graph from </emphasis>http://intersci.ss.uci.edu/<emphasis> */</emphasis>
  <emphasis>/* wiki/index.php/Cohesive_blocking                        */</emphasis>

  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 18, IGRAPH_UNDIRECTED, 
	       0,1,0,2,0,3, 
	       1,2,1,3,1,16,1,17, 
	       2,3, 
	       3,17, 
	       4,5,4,6,4,7,4,8,
	       5,6,5,7, 
	       6,7,6,8,
	       7,8,7,16,
	       8,9,8,10,
	       9,11,9,12,9,13,9,14,
	       10,11,10,12,10,13,
	       11,14,
	       12,13,12,14,12,15,
	       15,16,15,17,
	       16,17,
	       -1);
	       
  <emphasis role="strong">if</emphasis> ( (ret=<emphasis role="strong">doit</emphasis>(&amp;g)) ) { <emphasis role="strong">return</emphasis> ret; }
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  <emphasis role="strong">printf</emphasis>("--\n");  

  <emphasis>/* --------------------------------------------------------*/</emphasis>
  <emphasis>/* Zachary karate-club                                     */</emphasis>
  
  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 34, IGRAPH_UNDIRECTED,
	       0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,10,0,11,0,12,0,13,
	       0,17,0,19,0,21,0,31,
	       1,2,1,3,1,7,1,13,1,17,1,19,1,21,1,30,
	       2,3,2,7,2,27,2,28,2,32,2,9,2,8,2,13,
	       3,7,3,12,3,13,
	       4,6,4,10,
	       5,6,5,10,5,16,
	       6,16,
	       8,30,8,32,8,33,
	       9,33,
	       13,33,
	       14,32,14,33,
	       15,32,15,33,
	       18,32,18,33,
	       19,33,
	       20,32,20,33,
	       22,32,22,33,
	       23,25,23,27,23,32,23,33,23,29,
	       24,25,24,27,24,31,
	       25,31,
	       26,29,26,33,
	       27,33,
	       28,31,28,33,
	       29,32,29,33,
	       30,32,30,33,
	       31,32,31,33,
	       32,33,
	       -1);

  <emphasis role="strong">if</emphasis> ( (ret=<emphasis role="strong">doit</emphasis>(&amp;g)) ) { <emphasis role="strong">return</emphasis> ret; }
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  <emphasis role="strong">printf</emphasis>("--\n");  
  
  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
