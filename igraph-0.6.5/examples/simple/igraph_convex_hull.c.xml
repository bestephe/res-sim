<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge, MA 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

int <emphasis role="strong">main</emphasis>() {
  igraph_real_t coords_array[][2] =
   {{3, 2}, {5, 1}, {4, 4}, {6, 4}, {4, 3},
    {2, 5}, {1, 3}, {2, 4}, {6, 3}, {9, 2}
   };
    
  igraph_matrix_t coords, resmat;
  <link linkend='igraph_vector_t'>igraph_vector_t</link> result;
  long i;
  
  <emphasis role="strong"><link linkend='igraph_matrix_init'>igraph_matrix_init</link></emphasis>(&amp;coords, 10, 2);
  <emphasis role="strong">for</emphasis> (i=0; i&lt;20; i++) <emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, i/2, i%2) = coords_array[i/2][i%2];
  
  <emphasis>/* Testing with index output mode */</emphasis>
  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;result, 1);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_convex_hull'>igraph_convex_hull</link></emphasis>(&amp;coords, &amp;result, 0))
    <emphasis role="strong">return</emphasis> 1;

  <emphasis role="strong">for</emphasis> (i=0; i&lt;<emphasis role="strong"><link linkend='igraph_vector_size'>igraph_vector_size</link></emphasis>(&amp;result); i++)
    <emphasis role="strong">printf</emphasis>("%ld ", (long)<emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(result)[i]);
  <emphasis role="strong">printf</emphasis>("\n");
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;result);

  <emphasis>/* Testing with coordinate output mode */</emphasis>
  <emphasis role="strong"><link linkend='igraph_matrix_init'>igraph_matrix_init</link></emphasis>(&amp;resmat, 0, 0);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_convex_hull'>igraph_convex_hull</link></emphasis>(&amp;coords, 0, &amp;resmat))
    <emphasis role="strong">return</emphasis> 1;

  <emphasis role="strong">for</emphasis> (i=0; i&lt;<emphasis role="strong"><link linkend='igraph_matrix_nrow'>igraph_matrix_nrow</link></emphasis>(&amp;resmat); i++)
    <emphasis role="strong">printf</emphasis>("%ld %ld ", (long)<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(resmat, i, 0), (long)<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(resmat, i, 1));
  <emphasis role="strong">printf</emphasis>("\n");
  
  <emphasis role="strong"><link linkend='igraph_matrix_destroy'>igraph_matrix_destroy</link></emphasis>(&amp;resmat);
  <emphasis role="strong"><link linkend='igraph_matrix_destroy'>igraph_matrix_destroy</link></emphasis>(&amp;coords);
  
  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
