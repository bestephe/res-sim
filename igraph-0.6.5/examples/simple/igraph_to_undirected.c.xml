<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard st, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

int <emphasis role="strong">main</emphasis>() {
  
  <link linkend='igraph_vector_t'>igraph_vector_t</link> v;
  igraph_t g;
  
  <emphasis role="strong">igraph_vector_init_int</emphasis>(&amp;v, 2, 5, 5);
  <emphasis role="strong"><link linkend='igraph_lattice'>igraph_lattice</link></emphasis>(&amp;g, &amp;v, 1, IGRAPH_DIRECTED, 1 <emphasis>/*mutual*/</emphasis>, 0 <emphasis>/*circular*/</emphasis>);
  <emphasis role="strong"><link linkend='igraph_to_undirected'>igraph_to_undirected</link></emphasis>(&amp;g, IGRAPH_TO_UNDIRECTED_COLLAPSE, 
		       <emphasis>/*edge_comb=*/</emphasis> 0);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g, stdout);

  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;v);

  <emphasis role="strong">printf</emphasis>("---\n");

  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 10, IGRAPH_DIRECTED, 
	       0,1, 2,1, 2,3, 2,3, 4,3, 4,3,
	       5,6, 6,5, 6,7, 6,7, 7,6, 7,8, 7,8, 8,7, 8,7, 8,8, 9,9, 9,9,
	       -1);
  <emphasis role="strong"><link linkend='igraph_to_undirected'>igraph_to_undirected</link></emphasis>(&amp;g, IGRAPH_TO_UNDIRECTED_MUTUAL,
		       <emphasis>/*edge_comb=*/</emphasis> 0);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g, stdout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  
  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
