<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard st, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;
<emphasis role="strong">#include</emphasis> &lt;math.h&gt;
<emphasis role="strong">#include</emphasis> &lt;stdlib.h&gt;

<emphasis role="strong">#define</emphasis> <emphasis role="strong">sqr</emphasis>(x) ((x)*(x))

int <emphasis role="strong">main</emphasis>() {
  float dist[8][8] = {
	  {0.00, 4.69, 6.79, 3.50, 3.11, 4.46, 5.57, 3.00},
	  {4.69, 0.00, 2.10, 2.27, 2.65, 2.36, 1.99, 1.74},
	  {6.79, 2.10, 0.00, 3.78, 4.53, 2.83, 2.44, 3.79},
	  {3.50, 2.27, 3.78, 0.00, 1.98, 4.35, 2.07, 0.53},
	  {3.11, 2.65, 4.53, 1.98, 0.00, 3.80, 3.31, 1.47},
	  {4.46, 2.36, 2.83, 4.35, 3.80, 0.00, 4.35, 3.82},
	  {5.57, 1.99, 2.44, 2.07, 3.31, 4.35, 0.00, 2.57},
	  {3.00, 1.74, 3.79, 0.53, 1.47, 3.82, 2.57, 0.00},
  };
  igraph_t g;
  igraph_matrix_t coords, dist_mat;
  igraph_real_t vc;
  <link linkend='igraph_arpack_options_t'>igraph_arpack_options_t</link> options;
  int i, j;
  <emphasis role="strong">srand</emphasis>(<emphasis role="strong">time</emphasis>(0));

  <emphasis role="strong"><link linkend='igraph_arpack_options_init'>igraph_arpack_options_init</link></emphasis>(&amp;options);

  <emphasis role="strong"><link linkend='igraph_tree'>igraph_tree</link></emphasis>(&amp;g, 10, 2, IGRAPH_TREE_UNDIRECTED);
  <emphasis role="strong"><link linkend='igraph_matrix_init'>igraph_matrix_init</link></emphasis>(&amp;coords, 0, 0);
  <emphasis role="strong"><link linkend='igraph_layout_mds'>igraph_layout_mds</link></emphasis>(&amp;g, &amp;coords, 0, 2, &amp;options);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, 0, 0) &gt; 0) {
    <emphasis role="strong">for</emphasis> (i = 0; i &lt; <emphasis role="strong"><link linkend='igraph_matrix_nrow'>igraph_matrix_nrow</link></emphasis>(&amp;coords); i++)
      <emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, i, 0) *= -1;
  }
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, 0, 1) &lt; 0) {
    <emphasis role="strong">for</emphasis> (i = 0; i &lt; <emphasis role="strong"><link linkend='igraph_matrix_nrow'>igraph_matrix_nrow</link></emphasis>(&amp;coords); i++)
      <emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, i, 1) *= -1;
  }
  <emphasis role="strong">igraph_matrix_print</emphasis>(&amp;coords);
  <emphasis role="strong"><link linkend='igraph_matrix_destroy'>igraph_matrix_destroy</link></emphasis>(&amp;coords);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis role="strong"><link linkend='igraph_full'>igraph_full</link></emphasis>(&amp;g, 8, IGRAPH_UNDIRECTED, 0);
  <emphasis role="strong"><link linkend='igraph_matrix_init'>igraph_matrix_init</link></emphasis>(&amp;coords, 8, 2);
  <emphasis role="strong"><link linkend='igraph_matrix_init'>igraph_matrix_init</link></emphasis>(&amp;dist_mat, 8, 8);
  <emphasis role="strong">for</emphasis> (i = 0; i &lt; 8; i++)
    <emphasis role="strong">for</emphasis> (j = 0; j &lt; 2; j++)
      <emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, i, j) = <emphasis role="strong">rand</emphasis>() % 1000;
  <emphasis role="strong">for</emphasis> (i = 0; i &lt; 8; i++)
    <emphasis role="strong">for</emphasis> (j = i+1; j &lt; 8; j++) {
      double dist_sq = 0.0;
      dist_sq += <emphasis role="strong">sqr</emphasis>(<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, i, 0)-<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, j, 0));
      dist_sq += <emphasis role="strong">sqr</emphasis>(<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, i, 1)-<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, j, 1));
      <emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(dist_mat, i, j) = <emphasis role="strong">sqrt</emphasis>(dist_sq);
      <emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(dist_mat, j, i) = <emphasis role="strong">sqrt</emphasis>(dist_sq);
	}
  <emphasis role="strong"><link linkend='igraph_layout_mds'>igraph_layout_mds</link></emphasis>(&amp;g, &amp;coords, &amp;dist_mat, 2, &amp;options);
  <emphasis role="strong">for</emphasis> (i = 0; i &lt; 8; i++)
    <emphasis role="strong">for</emphasis> (j = i+1; j &lt; 8; j++) {
      double dist_sq = 0.0;
      dist_sq += <emphasis role="strong">sqr</emphasis>(<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, i, 0)-<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, j, 0));
      dist_sq += <emphasis role="strong">sqr</emphasis>(<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, i, 1)-<emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(coords, j, 1));
      <emphasis role="strong">if</emphasis> (<emphasis role="strong">fabs</emphasis>(<emphasis role="strong">sqrt</emphasis>(dist_sq) - <emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(dist_mat, i, j)) &gt; 1e-2) {
        <emphasis role="strong">printf</emphasis>("dist(%d,%d) should be %.4f, but it is %.4f\n",
				i, j, <emphasis role="strong"><link linkend='MATRIX'>MATRIX</link></emphasis>(dist_mat, i, j), <emphasis role="strong">sqrt</emphasis>(dist_sq));
        <emphasis role="strong">return</emphasis> 1;
      }
    }
  <emphasis role="strong"><link linkend='igraph_matrix_destroy'>igraph_matrix_destroy</link></emphasis>(&amp;dist_mat);
  <emphasis role="strong"><link linkend='igraph_matrix_destroy'>igraph_matrix_destroy</link></emphasis>(&amp;coords);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
