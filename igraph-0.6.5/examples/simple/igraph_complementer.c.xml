<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge, MA 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

int <emphasis role="strong">main</emphasis>() {
  
  igraph_t g1, g2;
  
  <emphasis>/* complementer of the empty graph */</emphasis>
  <emphasis role="strong"><link linkend='igraph_empty'>igraph_empty</link></emphasis>(&amp;g1, 5, IGRAPH_DIRECTED);
  <emphasis role="strong"><link linkend='igraph_complementer'>igraph_complementer</link></emphasis>(&amp;g2, &amp;g1, IGRAPH_LOOPS);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g2, stdout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g1);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);

  <emphasis role="strong">printf</emphasis>("---\n");

  <emphasis>/* the same without loops */</emphasis>
  <emphasis role="strong"><link linkend='igraph_empty'>igraph_empty</link></emphasis>(&amp;g1, 5, IGRAPH_DIRECTED);
  <emphasis role="strong"><link linkend='igraph_complementer'>igraph_complementer</link></emphasis>(&amp;g2, &amp;g1, IGRAPH_NO_LOOPS);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g2, stdout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g1);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);

  <emphasis role="strong">printf</emphasis>("---\n");
  
  <emphasis>/* complementer of the full graph */</emphasis>
  <emphasis role="strong"><link linkend='igraph_full'>igraph_full</link></emphasis>(&amp;g1, 5, IGRAPH_DIRECTED, IGRAPH_LOOPS);
  <emphasis role="strong"><link linkend='igraph_complementer'>igraph_complementer</link></emphasis>(&amp;g2, &amp;g1, IGRAPH_LOOPS);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_ecount'>igraph_ecount</link></emphasis>(&amp;g2) != 0) {
    <emphasis role="strong">return</emphasis> 1;
  }
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g1);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);

  <emphasis role="strong">printf</emphasis>("---\n");

  <emphasis>/* complementer of the full graph, results loops only */</emphasis>
  <emphasis role="strong"><link linkend='igraph_full'>igraph_full</link></emphasis>(&amp;g1, 5, IGRAPH_DIRECTED, IGRAPH_NO_LOOPS);
  <emphasis role="strong"><link linkend='igraph_complementer'>igraph_complementer</link></emphasis>(&amp;g2, &amp;g1, IGRAPH_LOOPS);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g2, stdout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g1);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);

  <emphasis role="strong">printf</emphasis>("---\n");

  <emphasis>/**************</emphasis>
<emphasis>   * undirected *</emphasis>
<emphasis>   *************/</emphasis>

  <emphasis>/* complementer of the empty graph */</emphasis>
  <emphasis role="strong"><link linkend='igraph_empty'>igraph_empty</link></emphasis>(&amp;g1, 5, IGRAPH_UNDIRECTED);
  <emphasis role="strong"><link linkend='igraph_complementer'>igraph_complementer</link></emphasis>(&amp;g2, &amp;g1, IGRAPH_LOOPS);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g2, stdout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g1);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);

  <emphasis role="strong">printf</emphasis>("---\n");

  <emphasis>/* the same without loops */</emphasis>
  <emphasis role="strong"><link linkend='igraph_empty'>igraph_empty</link></emphasis>(&amp;g1, 5, IGRAPH_UNDIRECTED);
  <emphasis role="strong"><link linkend='igraph_complementer'>igraph_complementer</link></emphasis>(&amp;g2, &amp;g1, IGRAPH_NO_LOOPS);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g2, stdout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g1);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);

  <emphasis role="strong">printf</emphasis>("---\n");
  
  <emphasis>/* complementer of the full graph */</emphasis>
  <emphasis role="strong"><link linkend='igraph_full'>igraph_full</link></emphasis>(&amp;g1, 5, IGRAPH_UNDIRECTED, IGRAPH_LOOPS);
  <emphasis role="strong"><link linkend='igraph_complementer'>igraph_complementer</link></emphasis>(&amp;g2, &amp;g1, IGRAPH_LOOPS);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_ecount'>igraph_ecount</link></emphasis>(&amp;g2) != 0) {
    <emphasis role="strong">return</emphasis> 1;
  }
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g1);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);

  <emphasis role="strong">printf</emphasis>("---\n");

  <emphasis>/* complementer of the full graph, results loops only */</emphasis>
  <emphasis role="strong"><link linkend='igraph_full'>igraph_full</link></emphasis>(&amp;g1, 5, IGRAPH_UNDIRECTED, IGRAPH_NO_LOOPS);
  <emphasis role="strong"><link linkend='igraph_complementer'>igraph_complementer</link></emphasis>(&amp;g2, &amp;g1, IGRAPH_LOOPS);
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g2, stdout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g1);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);
  
  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
