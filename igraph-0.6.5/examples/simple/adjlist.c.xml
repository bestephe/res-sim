<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2008-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge, MA 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

int <emphasis role="strong">main</emphasis>() {

  igraph_t g, g2;
  igraph_adjlist_t adjlist;
  igraph_bool_t iso;
  
  <emphasis>/* Directed, out */</emphasis>
  <emphasis role="strong"><link linkend='igraph_tree'>igraph_tree</link></emphasis>(&amp;g, 42, 3, IGRAPH_TREE_OUT);
  <emphasis role="strong"><link linkend='igraph_adjlist_init'>igraph_adjlist_init</link></emphasis>(&amp;g, &amp;adjlist, IGRAPH_OUT);
  <emphasis role="strong"><link linkend='igraph_adjlist'>igraph_adjlist</link></emphasis>(&amp;g2, &amp;adjlist, IGRAPH_OUT, <emphasis>/*duplicate=*/</emphasis> 0);
  <emphasis role="strong"><link linkend='igraph_isomorphic_bliss'>igraph_isomorphic_bliss</link></emphasis>(&amp;g, &amp;g2, &amp;iso, 0, 0, IGRAPH_BLISS_F, IGRAPH_BLISS_F, 0, 0);
  <emphasis role="strong">if</emphasis> (!iso) { <emphasis role="strong">return</emphasis> 1; }
  <emphasis role="strong"><link linkend='igraph_adjlist_destroy'>igraph_adjlist_destroy</link></emphasis>(&amp;adjlist);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* Directed, in */</emphasis>
  <emphasis role="strong"><link linkend='igraph_tree'>igraph_tree</link></emphasis>(&amp;g, 42, 3, IGRAPH_TREE_OUT);
  <emphasis role="strong"><link linkend='igraph_adjlist_init'>igraph_adjlist_init</link></emphasis>(&amp;g, &amp;adjlist, IGRAPH_IN);
  <emphasis role="strong"><link linkend='igraph_adjlist'>igraph_adjlist</link></emphasis>(&amp;g2, &amp;adjlist, IGRAPH_IN, <emphasis>/*duplicate=*/</emphasis> 0);
  <emphasis role="strong"><link linkend='igraph_isomorphic_bliss'>igraph_isomorphic_bliss</link></emphasis>(&amp;g, &amp;g2, &amp;iso, 0, 0, IGRAPH_BLISS_F, IGRAPH_BLISS_F, 0, 0);
  <emphasis role="strong">if</emphasis> (!iso) { <emphasis role="strong">return</emphasis> 1; }
  <emphasis role="strong"><link linkend='igraph_adjlist_destroy'>igraph_adjlist_destroy</link></emphasis>(&amp;adjlist);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* Undirected */</emphasis>
  <emphasis role="strong"><link linkend='igraph_tree'>igraph_tree</link></emphasis>(&amp;g, 42, 3, IGRAPH_TREE_UNDIRECTED);
  <emphasis role="strong"><link linkend='igraph_adjlist_init'>igraph_adjlist_init</link></emphasis>(&amp;g, &amp;adjlist, IGRAPH_OUT);
  <emphasis role="strong"><link linkend='igraph_adjlist'>igraph_adjlist</link></emphasis>(&amp;g2, &amp;adjlist, IGRAPH_ALL, <emphasis>/*duplicate=*/</emphasis> 1);
  <emphasis role="strong"><link linkend='igraph_isomorphic_bliss'>igraph_isomorphic_bliss</link></emphasis>(&amp;g, &amp;g2, &amp;iso, 0, 0, IGRAPH_BLISS_F, IGRAPH_BLISS_F, 0, 0);
  <emphasis role="strong">if</emphasis> (!iso) { <emphasis role="strong">return</emphasis> 1; }
  <emphasis role="strong"><link linkend='igraph_adjlist_destroy'>igraph_adjlist_destroy</link></emphasis>(&amp;adjlist);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
			  
  <emphasis role="strong">return</emphasis> 0;
}

</programlisting>
