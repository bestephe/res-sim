<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph R package.</emphasis>
<emphasis>   Copyright (C) 2005-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard st, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

int <emphasis role="strong">main</emphasis>() {

  igraph_t g;
  FILE *input;

  <emphasis>/* Without names and weights */</emphasis>
  input=<emphasis role="strong">fopen</emphasis>("igraph_read_graph_lgl-1.lgl", "r");
  <emphasis role="strong">if</emphasis> (!input) { 
    <emphasis role="strong">return</emphasis> 1;
  }
  <emphasis role="strong"><link linkend='igraph_read_graph_lgl'>igraph_read_graph_lgl</link></emphasis>(&amp;g, input, 0, IGRAPH_ADD_WEIGHTS_NO, 1);
  <emphasis role="strong">fclose</emphasis>(input);
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g)) {
    <emphasis role="strong">return</emphasis> 2;
  }
  <emphasis role="strong"><link linkend='igraph_write_graph_edgelist'>igraph_write_graph_edgelist</link></emphasis>(&amp;g, stdout);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* With names and weights */</emphasis>
  input=<emphasis role="strong">fopen</emphasis>("igraph_read_graph_lgl-2.lgl", "r");
  <emphasis role="strong">if</emphasis> (!input) {
    <emphasis role="strong">return</emphasis> 3;
  }
  <emphasis role="strong"><link linkend='igraph_read_graph_lgl'>igraph_read_graph_lgl</link></emphasis>(&amp;g, input, 0, IGRAPH_ADD_WEIGHTS_NO, 1);
  <emphasis role="strong">fclose</emphasis>(input);
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g)) {
    <emphasis role="strong">return</emphasis> 4;
  }
  <emphasis role="strong"><link linkend='igraph_write_graph_ncol'>igraph_write_graph_ncol</link></emphasis>(&amp;g, stdout, 0, 0);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* Same graph, but forcing undirected mode */</emphasis>
  input=<emphasis role="strong">fopen</emphasis>("igraph_read_graph_lgl-2.lgl", "r");
  <emphasis role="strong"><link linkend='igraph_read_graph_lgl'>igraph_read_graph_lgl</link></emphasis>(&amp;g, input, 0, IGRAPH_ADD_WEIGHTS_NO, 0);
  <emphasis role="strong">fclose</emphasis>(input);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g)) {
    <emphasis role="strong">return</emphasis> 5;
  }
  <emphasis role="strong"><link linkend='igraph_write_graph_ncol'>igraph_write_graph_ncol</link></emphasis>(&amp;g, stdout, 0, 0);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* Erroneous LGL file (empty vertex name) */</emphasis>
  input=<emphasis role="strong">fopen</emphasis>("igraph_read_graph_lgl-3.lgl", "r");
  <emphasis role="strong">if</emphasis> (!input) {
    <emphasis role="strong">return</emphasis> 6;
  }
  <emphasis role="strong"><link linkend='igraph_set_error_handler'>igraph_set_error_handler</link></emphasis>(<link linkend='igraph_error_handler_ignore'>igraph_error_handler_ignore</link>);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_read_graph_lgl'>igraph_read_graph_lgl</link></emphasis>(&amp;g, input, 0, IGRAPH_ADD_WEIGHTS_NO, 1) !=
		  IGRAPH_PARSEERROR) {
    <emphasis role="strong">return</emphasis> 7;
  }
  <emphasis role="strong">fclose</emphasis>(input);

  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
