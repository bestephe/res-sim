<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge, MA 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

int <emphasis role="strong">main</emphasis>() {

  igraph_t g1, g2;
  <link linkend='igraph_vector_t'>igraph_vector_t</link> v1, v2;

  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;v1, 8);
  <emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(v1)[0]=0; <emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(v1)[1]=1;
  <emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(v1)[2]=1; <emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(v1)[3]=2;
  <emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(v1)[4]=2; <emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(v1)[5]=3;
  <emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(v1)[6]=2; <emphasis role="strong"><link linkend='VECTOR'>VECTOR</link></emphasis>(v1)[7]=2;

  <emphasis role="strong"><link linkend='igraph_create'>igraph_create</link></emphasis>(&amp;g1, &amp;v1, 0, 0);
  <emphasis role="strong"><link linkend='igraph_copy'>igraph_copy</link></emphasis>(&amp;g2, &amp;g1);

  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;v2, 0);
  <emphasis role="strong"><link linkend='igraph_get_edgelist'>igraph_get_edgelist</link></emphasis>(&amp;g2, &amp;v2, 0);
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_vector_all_e'>igraph_vector_all_e</link></emphasis>(&amp;v1, &amp;v2)) {
    <emphasis role="strong">return</emphasis> 1;
  }

  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;v1);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;v2);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g1);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g2);

  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
