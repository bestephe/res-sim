<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2010-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge, MA 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;
<emphasis role="strong">#include</emphasis> &lt;stdio.h&gt;

int <emphasis role="strong">main</emphasis>() {
  
  igraph_t g;
  igraph_bool_t simple;

  <emphasis role="strong"><link linkend='igraph_barabasi_game'>igraph_barabasi_game</link></emphasis>(<emphasis>/* graph=    */</emphasis> &amp;g, 
		       <emphasis>/* n=        */</emphasis> 100,
		       <emphasis>/* power=    */</emphasis> 1.0,
		       <emphasis>/* m=        */</emphasis> 2,
		       <emphasis>/* outseq=   */</emphasis> 0,
		       <emphasis>/* outpref=  */</emphasis> 0,
		       <emphasis>/* A=        */</emphasis> 1.0,
		       <emphasis>/* directed= */</emphasis> IGRAPH_DIRECTED,
		       <emphasis>/* algo=     */</emphasis> IGRAPH_BARABASI_PSUMTREE,
		       <emphasis>/* start_from= */</emphasis> 0);
  
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_ecount'>igraph_ecount</link></emphasis>(&amp;g) != 197) { <emphasis role="strong">return</emphasis> 1; }
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_vcount'>igraph_vcount</link></emphasis>(&amp;g) != 100) { <emphasis role="strong">return</emphasis> 2; }
  <emphasis role="strong"><link linkend='igraph_is_simple'>igraph_is_simple</link></emphasis>(&amp;g, &amp;simple);
  <emphasis role="strong">if</emphasis> (!simple) { <emphasis role="strong">return</emphasis> 3; }
  
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  
  <emphasis>/* ============================== */</emphasis>

  <emphasis role="strong"><link linkend='igraph_barabasi_game'>igraph_barabasi_game</link></emphasis>(<emphasis>/* graph=    */</emphasis> &amp;g, 
		       <emphasis>/* n=        */</emphasis> 100,
		       <emphasis>/* power=    */</emphasis> 1.0,
		       <emphasis>/* m=        */</emphasis> 2,
		       <emphasis>/* outseq=   */</emphasis> 0,
		       <emphasis>/* outpref=  */</emphasis> 0,
		       <emphasis>/* A=        */</emphasis> 1.0,
		       <emphasis>/* directed= */</emphasis> IGRAPH_DIRECTED,
		       <emphasis>/* algo=     */</emphasis> IGRAPH_BARABASI_PSUMTREE_MULTIPLE,
		       <emphasis>/* start_from= */</emphasis> 0);

  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_ecount'>igraph_ecount</link></emphasis>(&amp;g) != 198) { <emphasis role="strong">return</emphasis> 4; }
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_vcount'>igraph_vcount</link></emphasis>(&amp;g) != 100) { <emphasis role="strong">return</emphasis> 5; }
  <emphasis role="strong"><link linkend='igraph_is_simple'>igraph_is_simple</link></emphasis>(&amp;g, &amp;simple);
  <emphasis role="strong">if</emphasis> (simple) { <emphasis role="strong">return</emphasis> 6; }
  
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* ============================== */</emphasis>

  <emphasis role="strong"><link linkend='igraph_barabasi_game'>igraph_barabasi_game</link></emphasis>(<emphasis>/* graph=    */</emphasis> &amp;g, 
		       <emphasis>/* n=        */</emphasis> 100,
		       <emphasis>/* power=    */</emphasis> 1.0,
		       <emphasis>/* m=        */</emphasis> 2,
		       <emphasis>/* outseq=   */</emphasis> 0,
		       <emphasis>/* outpref=  */</emphasis> 0,
		       <emphasis>/* A=        */</emphasis> 1.0,
		       <emphasis>/* directed= */</emphasis> IGRAPH_DIRECTED,
		       <emphasis>/* algo=     */</emphasis> IGRAPH_BARABASI_BAG,
		       <emphasis>/* start_from= */</emphasis> 0);

  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_ecount'>igraph_ecount</link></emphasis>(&amp;g) != 198) { <emphasis role="strong">return</emphasis> 7; }
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_vcount'>igraph_vcount</link></emphasis>(&amp;g) != 100) { <emphasis role="strong">return</emphasis> 8; }
  <emphasis role="strong"><link linkend='igraph_is_simple'>igraph_is_simple</link></emphasis>(&amp;g, &amp;simple);
  <emphasis role="strong">if</emphasis> (simple) { <emphasis role="strong">return</emphasis> 9; }
  
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);    
  
  <emphasis role="strong">return</emphasis> 0;
}

</programlisting>
