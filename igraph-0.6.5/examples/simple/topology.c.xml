<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

int <emphasis role="strong">main</emphasis>() {
  
  igraph_t g;
  <link linkend='igraph_vector_t'>igraph_vector_t</link> edges;
  <link linkend='igraph_vector_t'>igraph_vector_t</link> vids;
  igraph_integer_t class;
  
  <emphasis role="strong">igraph_vector_init_int_end</emphasis>(&amp;edges, -1, 
			     0,1, 1,3, 1,4, 1,6, 3,1,
			     4,1, 4,2, 6,4, 6,5, 7,8,
			     8,7, 7,9, 9,7, 8,9, 9,8,
			     -1);
  <emphasis role="strong"><link linkend='igraph_create'>igraph_create</link></emphasis>(&amp;g, &amp;edges, 0, IGRAPH_DIRECTED);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;edges);
  
  <emphasis role="strong">igraph_vector_init_int_end</emphasis>(&amp;vids, -1, 1,4,6, -1);
  <emphasis role="strong"><link linkend='igraph_isoclass_subgraph'>igraph_isoclass_subgraph</link></emphasis>(&amp;g, &amp;vids, &amp;class);
  <emphasis role="strong">printf</emphasis>("class: %i\n", (int)class);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;vids);

  <emphasis role="strong">igraph_vector_init_int_end</emphasis>(&amp;vids, -1, 0,1,3, -1);
  <emphasis role="strong"><link linkend='igraph_isoclass_subgraph'>igraph_isoclass_subgraph</link></emphasis>(&amp;g, &amp;vids, &amp;class);
  <emphasis role="strong">printf</emphasis>("class: %i\n", (int)class);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;vids);

  <emphasis role="strong">igraph_vector_init_int_end</emphasis>(&amp;vids, -1, 7,8,9, -1);
  <emphasis role="strong"><link linkend='igraph_isoclass_subgraph'>igraph_isoclass_subgraph</link></emphasis>(&amp;g, &amp;vids, &amp;class);
  <emphasis role="strong">printf</emphasis>("class: %i\n", (int)class);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;vids);

  <emphasis role="strong">igraph_vector_init_int_end</emphasis>(&amp;vids, -1, 0,2,5, -1);
  <emphasis role="strong"><link linkend='igraph_isoclass_subgraph'>igraph_isoclass_subgraph</link></emphasis>(&amp;g, &amp;vids, &amp;class);
  <emphasis role="strong">printf</emphasis>("class: %i\n", (int)class);
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;vids);
  
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
