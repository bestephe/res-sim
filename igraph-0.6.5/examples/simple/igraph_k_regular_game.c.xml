<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard street, Cambridge, MA 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;

int <emphasis role="strong">main</emphasis>() {
  igraph_t g;
  <link linkend='igraph_vector_t'>igraph_vector_t</link> deg;
  igraph_bool_t is_simple;
  igraph_bool_t is_directed;

  <emphasis role="strong"><link linkend='igraph_set_error_handler'>igraph_set_error_handler</link></emphasis>(&amp;<link linkend='igraph_error_handler_ignore'>igraph_error_handler_ignore</link>);

  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;deg, 0);

  <emphasis>/* k-regular undirected graph, even degrees, no multiple edges */</emphasis>
  <emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 10, 4, 0, 0);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_ALL, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong"><link linkend='igraph_is_simple'>igraph_is_simple</link></emphasis>(&amp;g, &amp;is_simple);
  <emphasis role="strong">if</emphasis> (!is_simple)
	  <emphasis role="strong">return</emphasis> 1;
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 1;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* k-regular undirected graph, odd degrees, even number of vertices, no multiple edges */</emphasis>
  <emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 10, 3, 0, 0);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_ALL, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong"><link linkend='igraph_is_simple'>igraph_is_simple</link></emphasis>(&amp;g, &amp;is_simple);
  <emphasis role="strong">if</emphasis> (!is_simple)
	  <emphasis role="strong">return</emphasis> 2;
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 2;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* k-regular undirected graph, odd degrees, odd number of vertices, no multiple edges */</emphasis>
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 9, 3, 0, 0))
	  <emphasis role="strong">return</emphasis> 3;

  <emphasis>/* k-regular undirected graph, even degrees, multiple edges */</emphasis>
  <emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 10, 4, 0, 1);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_ALL, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 14;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* k-regular undirected graph, odd degrees, even number of vertices, multiple edges */</emphasis>
  <emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 10, 3, 0, 1);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_ALL, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 15;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* k-regular undirected graph, odd degrees, odd number of vertices, multiple edges */</emphasis>
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 9, 3, 0, 1))
	  <emphasis role="strong">return</emphasis> 4;

  <emphasis>/* k-regular directed graph, even degrees, no multiple edges */</emphasis>
  <emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 10, 4, 1, 0);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_IN, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_OUT, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong"><link linkend='igraph_is_simple'>igraph_is_simple</link></emphasis>(&amp;g, &amp;is_simple);
  <emphasis role="strong">if</emphasis> (!is_simple)
	  <emphasis role="strong">return</emphasis> 5;
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 5;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* k-regular directed graph, odd degrees, even number of vertices, no multiple edges */</emphasis>
  <emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 10, 3, 1, 0);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_IN, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_OUT, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong"><link linkend='igraph_is_simple'>igraph_is_simple</link></emphasis>(&amp;g, &amp;is_simple);
  <emphasis role="strong">if</emphasis> (!is_simple)
	  <emphasis role="strong">return</emphasis> 6;
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 6;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* k-regular directed graph, odd degrees, odd number of vertices, no multiple edges */</emphasis>
  <emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 9, 3, 1, 0);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_IN, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_OUT, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong"><link linkend='igraph_is_simple'>igraph_is_simple</link></emphasis>(&amp;g, &amp;is_simple);
  <emphasis role="strong">if</emphasis> (!is_simple)
	  <emphasis role="strong">return</emphasis> 7;
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 7;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* k-regular directed graph, even degrees, multiple edges */</emphasis>
  <emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 10, 4, 1, 1);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_IN, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_OUT, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 16;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* k-regular directed graph, odd degrees, even number of vertices, multiple edges */</emphasis>
  <emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 10, 3, 1, 1);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_IN, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_OUT, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 17;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* k-regular directed graph, odd degrees, odd number of vertices, multiple edges */</emphasis>
  <emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 9, 3, 1, 1);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_IN, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong"><link linkend='igraph_degree'>igraph_degree</link></emphasis>(&amp;g, &amp;deg, <emphasis role="strong"><link linkend='igraph_vss_all'>igraph_vss_all</link></emphasis>(), IGRAPH_OUT, 1);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;deg);
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 18;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* k-regular undirected graph, too large degree, no multiple edges */</emphasis>
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 10, 10, 0, 0))
	  <emphasis role="strong">return</emphasis> 8;

  <emphasis>/* k-regular directed graph, too large degree, no multiple edges */</emphasis>
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 10, 10, 1, 0))
	  <emphasis role="strong">return</emphasis> 9;

  <emphasis>/* empty graph */</emphasis>
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 0, 0, 0, 0))
	  <emphasis role="strong">return</emphasis> 10;
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_vcount'>igraph_vcount</link></emphasis>(&amp;g) != 0 || <emphasis role="strong"><link linkend='igraph_ecount'>igraph_ecount</link></emphasis>(&amp;g) != 0 || <emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 11;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_k_regular_game'>igraph_k_regular_game</link></emphasis>(&amp;g, 0, 0, 1, 0))
	  <emphasis role="strong">return</emphasis> 12;
  <emphasis role="strong">if</emphasis> (<emphasis role="strong"><link linkend='igraph_vcount'>igraph_vcount</link></emphasis>(&amp;g) != 0 || <emphasis role="strong"><link linkend='igraph_ecount'>igraph_ecount</link></emphasis>(&amp;g) != 0 || !<emphasis role="strong"><link linkend='igraph_is_directed'>igraph_is_directed</link></emphasis>(&amp;g))
	  <emphasis role="strong">return</emphasis> 13;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;deg);

  <emphasis role="strong">return</emphasis> 0;
}

</programlisting>
