<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2006-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard st, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;
<emphasis role="strong">#include</emphasis> &lt;igraph_types_internal.h&gt;
<emphasis role="strong">#include</emphasis> &lt;stdlib.h&gt;

void <emphasis role="strong">print_set</emphasis>(igraph_set_t *set, FILE *f) {
  long int state=0;
  igraph_integer_t element;
  <emphasis role="strong">while</emphasis> (<emphasis role="strong">igraph_set_iterate</emphasis>(set, &amp;state, &amp;element)) {
    <emphasis role="strong">fprintf</emphasis>(f, " %li", (long int) element);
  }
  <emphasis role="strong">fprintf</emphasis>(f, "\n");
}

int <emphasis role="strong">main</emphasis>() {
  
  igraph_set_t set, set2;
  int i;
  igraph_integer_t *ptr;

  <emphasis>/* simple init */</emphasis>
  <emphasis role="strong">igraph_set_init</emphasis>(&amp;set, 0);
  <emphasis role="strong">igraph_set_destroy</emphasis>(&amp;set);

  <emphasis>/* addition, igraph_set_size */</emphasis>
  <emphasis role="strong">igraph_set_init</emphasis>(&amp;set, 10);
  i=10;
  <emphasis role="strong">while</emphasis> (<emphasis role="strong">igraph_set_size</emphasis>(&amp;set) &lt; 10) {
    <emphasis role="strong">igraph_set_add</emphasis>(&amp;set, 2*i);
    i--;
  }
  <emphasis role="strong">while</emphasis> (<emphasis role="strong">igraph_set_size</emphasis>(&amp;set) &lt; 21) {
    <emphasis role="strong">igraph_set_add</emphasis>(&amp;set, 2*i+1);
    i++;
  }
  <emphasis role="strong">print_set</emphasis>(&amp;set, stdout);

  <emphasis>/* adding existing element */</emphasis>
  <emphasis role="strong">igraph_set_add</emphasis>(&amp;set, 8);
  <emphasis role="strong">if</emphasis> (<emphasis role="strong">igraph_set_size</emphasis>(&amp;set) != 21) {
    <emphasis role="strong">return</emphasis> 4;
  }

  <emphasis>/* igraph_set_contains */</emphasis>
  <emphasis role="strong">if</emphasis> (<emphasis role="strong">igraph_set_contains</emphasis>(&amp;set, 42) || !<emphasis role="strong">igraph_set_contains</emphasis>(&amp;set, 7)) {
    <emphasis role="strong">return</emphasis> 3;
  }

  <emphasis>/* igraph_set_empty, igraph_set_clear */</emphasis>
  <emphasis role="strong">if</emphasis> (<emphasis role="strong">igraph_set_empty</emphasis>(&amp;set)) {
    <emphasis role="strong">return</emphasis> 1;
  }
  <emphasis role="strong">igraph_set_clear</emphasis>(&amp;set);
  <emphasis role="strong">if</emphasis> (!<emphasis role="strong">igraph_set_empty</emphasis>(&amp;set)) {
    <emphasis role="strong">return</emphasis> 2;
  }
  <emphasis role="strong">igraph_set_destroy</emphasis>(&amp;set);
  
  <emphasis role="strong">if</emphasis> (!IGRAPH_FINALLY_STACK_EMPTY) <emphasis role="strong">return</emphasis> 5;

  <emphasis role="strong">return</emphasis> 0;
}
  
</programlisting>
