<programlisting linenumbering="numbered"><emphasis>/* -*- mode: C -*-  */</emphasis>
<emphasis>/* vim:set ts=2 sw=2 sts=2 et: */</emphasis>
<emphasis>/* </emphasis>
<emphasis>   IGraph library.</emphasis>
<emphasis>   Copyright (C) 2011-2012  Gabor Csardi </emphasis>&lt;csardi.gabor@gmail.com&gt;
<emphasis>   334 Harvard st, Cambridge MA, 02139 USA</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is free software; you can redistribute it and/or modify</emphasis>
<emphasis>   it under the terms of the GNU General Public License as published by</emphasis>
<emphasis>   the Free Software Foundation; either version 2 of the License, or</emphasis>
<emphasis>   (at your option) any later version.</emphasis>
<emphasis>   </emphasis>
<emphasis>   This program is distributed in the hope that it will be useful,</emphasis>
<emphasis>   but WITHOUT ANY WARRANTY; without even the implied warranty of</emphasis>
<emphasis>   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</emphasis>
<emphasis>   GNU General Public License for more details.</emphasis>
<emphasis>   </emphasis>
<emphasis>   You should have received a copy of the GNU General Public License</emphasis>
<emphasis>   along with this program; if not, write to the Free Software</emphasis>
<emphasis>   Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA </emphasis>
<emphasis>   02110-1301 USA</emphasis>

<emphasis>*/</emphasis>

<emphasis role="strong">#include</emphasis> &lt;igraph.h&gt;
<emphasis role="strong">#include</emphasis> &lt;string.h&gt;

int <emphasis role="strong">main</emphasis>() {
  igraph_t g;
  <link linkend='igraph_vector_t'>igraph_vector_t</link> weights, result;
  igraph_bool_t dag;
  int retval;

  <emphasis role="strong"><link linkend='igraph_vector_init'>igraph_vector_init</link></emphasis>(&amp;result, 0);

  <emphasis role="strong"><link linkend='igraph_set_error_handler'>igraph_set_error_handler</link></emphasis>(&amp;<link linkend='igraph_error_handler_printignore'>igraph_error_handler_printignore</link>);

  <emphasis>/***********************************************************************/</emphasis>
  <emphasis>/* Exact solution with integer programming                             */</emphasis>
  <emphasis>/***********************************************************************/</emphasis>

  <emphasis>/* Simple unweighted graph */</emphasis>
  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 0, IGRAPH_DIRECTED, 0,1, 1,2, 2,0, 2,3, 2,4, 0,4, 4,3, 5,0, 6,5, -1);
  retval = <emphasis role="strong"><link linkend='igraph_feedback_arc_set'>igraph_feedback_arc_set</link></emphasis>(&amp;g, &amp;result, 0, IGRAPH_FAS_EXACT_IP);
  <emphasis role="strong">if</emphasis> (retval == IGRAPH_UNIMPLEMENTED)
    <emphasis role="strong">return</emphasis> 77;
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;result);
  <emphasis role="strong"><link linkend='igraph_delete_edges'>igraph_delete_edges</link></emphasis>(&amp;g, <emphasis role="strong"><link linkend='igraph_ess_vector'>igraph_ess_vector</link></emphasis>(&amp;result));
  <emphasis role="strong"><link linkend='igraph_is_dag'>igraph_is_dag</link></emphasis>(&amp;g, &amp;dag);
  <emphasis role="strong">if</emphasis> (!dag)
    <emphasis role="strong">return</emphasis> 1;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* Simple weighted graph */</emphasis>
  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 0, IGRAPH_DIRECTED, 0,1, 1,2, 2,0, 2,3, 2,4, 0,4, 4,3, 5,0, 6,5, -1);
  <emphasis role="strong">igraph_vector_init_int_end</emphasis>(&amp;weights, -1, 1, 1, 3, 1, 1, 1, 1, 1, 1, -1);
  <emphasis role="strong"><link linkend='igraph_feedback_arc_set'>igraph_feedback_arc_set</link></emphasis>(&amp;g, &amp;result, &amp;weights, IGRAPH_FAS_EXACT_IP);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;result);
  <emphasis role="strong"><link linkend='igraph_delete_edges'>igraph_delete_edges</link></emphasis>(&amp;g, <emphasis role="strong"><link linkend='igraph_ess_vector'>igraph_ess_vector</link></emphasis>(&amp;result));
  <emphasis role="strong"><link linkend='igraph_is_dag'>igraph_is_dag</link></emphasis>(&amp;g, &amp;dag);
  <emphasis role="strong">if</emphasis> (!dag)
    <emphasis role="strong">return</emphasis> 2;
  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;weights);
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* Simple unweighted graph with loops */</emphasis>
  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 0, IGRAPH_DIRECTED, 0,1, 1,2, 2,0, 2,3, 2,4, 0,4, 4,3, 5,0, 6,5, 1,1, 4,4, -1);
  <emphasis role="strong"><link linkend='igraph_feedback_arc_set'>igraph_feedback_arc_set</link></emphasis>(&amp;g, &amp;result, 0, IGRAPH_FAS_EXACT_IP);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;result);
  <emphasis role="strong"><link linkend='igraph_delete_edges'>igraph_delete_edges</link></emphasis>(&amp;g, <emphasis role="strong"><link linkend='igraph_ess_vector'>igraph_ess_vector</link></emphasis>(&amp;result));
  <emphasis role="strong"><link linkend='igraph_is_dag'>igraph_is_dag</link></emphasis>(&amp;g, &amp;dag);
  <emphasis role="strong">if</emphasis> (!dag)
    <emphasis role="strong">return</emphasis> 3;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis>/* Disjoint union of two almost identical graphs */</emphasis>
  <emphasis role="strong"><link linkend='igraph_small'>igraph_small</link></emphasis>(&amp;g, 0, IGRAPH_DIRECTED,
      0,1, 1,2, 2,0, 2,3,  2,4,  0,4,  4,3,    5,0,  6,5, 1,1, 4,4,
      7,8, 8,9, 9,7, 9,10, 9,11, 7,11, 11,10, 12,7, 13,12,
      -1);
  <emphasis role="strong"><link linkend='igraph_feedback_arc_set'>igraph_feedback_arc_set</link></emphasis>(&amp;g, &amp;result, 0, IGRAPH_FAS_EXACT_IP);
  <emphasis role="strong">igraph_vector_print</emphasis>(&amp;result);
  <emphasis role="strong"><link linkend='igraph_delete_edges'>igraph_delete_edges</link></emphasis>(&amp;g, <emphasis role="strong"><link linkend='igraph_ess_vector'>igraph_ess_vector</link></emphasis>(&amp;result));
  <emphasis role="strong"><link linkend='igraph_is_dag'>igraph_is_dag</link></emphasis>(&amp;g, &amp;dag);
  <emphasis role="strong">if</emphasis> (!dag)
    <emphasis role="strong">return</emphasis> 4;
  <emphasis role="strong"><link linkend='igraph_destroy'>igraph_destroy</link></emphasis>(&amp;g);

  <emphasis role="strong"><link linkend='igraph_vector_destroy'>igraph_vector_destroy</link></emphasis>(&amp;result);

  <emphasis role="strong">return</emphasis> 0;
}
</programlisting>
